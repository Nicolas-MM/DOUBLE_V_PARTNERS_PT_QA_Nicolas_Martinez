{
	"info": {
		"_postman_id": "f751ee7a-b6f8-44cd-a9bd-ceab6705efb2",
		"name": "Validación funcional",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29943369"
	},
	"item": [
		{
			"name": "Agregar productos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 o 201\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
							"});\r",
							"\r",
							"pm.test(\"El producto creado tiene ID\", function () {\r",
							"    let data = pm.response.json();\r",
							"    pm.expect(data).to.have.property(\"id\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"Auriculares gamer\",\r\n  \"price\": 3.500,\r\n  \"description\": \"Auriculares pro\",\r\n  \"image\": \"https://i.pravatar.cc\",\r\n  \"category\": \"electronics\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://fakestoreapi.com/products",
					"protocol": "https",
					"host": [
						"fakestoreapi",
						"com"
					],
					"path": [
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "Productostodos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"La respuesta es un array no vacío\", function () {\r",
							"    let data = pm.response.json();\r",
							"    pm.expect(data.length).to.be.above(0);\r",
							"});\r",
							"\r",
							"pm.test(\"Todos los productos son de la categoría electronics\", function () {\r",
							"    let data = pm.response.json();\r",
							"    data.forEach(p => pm.expect(p.category).to.eql(\"electronics\"));\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://fakestoreapi.com/products/category/electronics?categoria=electronics&stock=1",
					"protocol": "https",
					"host": [
						"fakestoreapi",
						"com"
					],
					"path": [
						"products",
						"category",
						"electronics"
					],
					"query": [
						{
							"key": "categoria",
							"value": "electronics"
						},
						{
							"key": "stock",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "1 producto",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"El producto tiene campos requeridos\", function () {\r",
							"    let data = pm.response.json();\r",
							"    pm.expect(data).to.have.property(\"id\");\r",
							"    pm.expect(data).to.have.property(\"title\");\r",
							"    pm.expect(data).to.have.property(\"price\");\r",
							"    pm.expect(data).to.have.property(\"category\");\r",
							"});\r",
							"\r",
							"pm.test(\"El id consultado corresponde al producto correcto\", function () {\r",
							"    let data = pm.response.json();\r",
							"    pm.expect(data.id).to.eql(9);  // cambia el 5 si usas otro ID\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://fakestoreapi.com/products/9?Content-Type=application/json",
					"protocol": "https",
					"host": [
						"fakestoreapi",
						"com"
					],
					"path": [
						"products",
						"9"
					],
					"query": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar imagen",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"La imagen fue actualizada\", function () {\r",
							"    let data = pm.response.json();\r",
							"    pm.expect(data.image).to.eql(\"https://example.com/new-product-image.jpg\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"image\": \"https://example.com/new-product-image.jpg\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://fakestoreapi.com/products/21",
					"protocol": "https",
					"host": [
						"fakestoreapi",
						"com"
					],
					"path": [
						"products",
						"21"
					]
				}
			},
			"response": []
		}
	]
}